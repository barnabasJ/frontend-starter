/* eslint-disable */
/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * yarn graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../api/types.generated';

import { api } from '@/api';

// module.hot?.accept();

export type AllFilmsQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type AllFilmsQuery = (
  { __typename?: 'Root' }
  & { allFilms?: Types.Maybe<(
    { __typename?: 'FilmsConnection' }
    & { edges?: Types.Maybe<Array<Types.Maybe<(
      { __typename?: 'FilmsEdge' }
      & { node?: Types.Maybe<(
        { __typename?: 'Film' }
        & Pick<Types.Film, 'id' | 'title'>
      )> }
    )>>> }
  )> }
);


export const AllFilmsDocument = `
    query AllFilms {
  allFilms {
    edges {
      node {
        id
        title
      }
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: false,
  endpoints: (build) => ({
    AllFilms: build.query<AllFilmsQuery, AllFilmsQueryVariables | void>({
      query: (variables) => ({ document: AllFilmsDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useAllFilmsQuery, useLazyAllFilmsQuery } = injectedRtkApi;

